setwd("//172.16.100.210/manuscritos/2024_DataPaperTepual/Datos/dataset/census/census2014")
df14 <- read.csv("census_database2014.csv", row.names = NULL, sep=",")
setwd("//172.16.100.210/manuscritos/2024_DataPaperTepual/Datos/dataset/census/census2024")
df24 <- read.csv("census_database2024.csv", row.names = NULL, sep=",")
##
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(gridExtra)
##
#quitamos los prior de 2014 y juntamos ambos databases
df14_sinP <- subset(df14, condition != "P")
df <- bind_rows(df14_sinP, df24)
#agregar columna de area basal
df <- df %>% mutate(dbh = na_if(dbh, -999)) #todos los "-999" en dbh pasan a "NA"
df$area_basal <- pi * (df$dbh / 2)^2 / 10000  # cm a m
###########################################################
#area basal total por censo
BA_total <- df %>%
group_by(censusID) %>%
summarise(
total_BA = sum(area_basal, na.rm = TRUE)
)
BA_total
#calcular las valores para cada especie
summary <- df %>%
group_by(sp, censusID) %>%
summarise(
stems_per_ha = n(),
trees_per_ha = n_distinct(treeID),
basal_area = sum(area_basal, na.rm = TRUE),
mean_dbh = mean(dbh, na.rm = TRUE),
highest_dbh = max(dbh, na.rm = TRUE),
.groups = 'drop'
)
#dividir resultados por censusID
summary_wide <- summary %>%
pivot_wider(
names_from = censusID,
values_from = c(stems_per_ha, trees_per_ha, basal_area, mean_dbh, highest_dbh),
names_glue = "{censusID}_{.value}"
)
#ordenar columnas y filas
summary_wide <- summary_wide %>%
select(
sp,
`2014_stems_per_ha`, `2014_trees_per_ha`, `2014_basal_area`, `2014_mean_dbh`, `2014_highest_dbh`,
`2024_stems_per_ha`, `2024_trees_per_ha`, `2024_basal_area`, `2024_mean_dbh`, `2024_highest_dbh`
) %>%
arrange(desc(`2014_stems_per_ha`))
##############
# Revision casos a partir de summary_wide
NONI <- df %>% filter(sp=="NONI") #R12_132 (estaba mal digitado en 2014)
CAPA <- df %>% filter(sp=="CAPA") #D17_488 (mal digitado en 2014 - CHEQUEADO CON INFO 2019)
CRHO <- df %>% filter(sp=="CRHO") #G12_437 (> dbh en 2014 no fue encontrado en 2024, tampoco en 2019)
RALA <- df %>% filter(sp=="RALA") #E15_113 y E15_112 (arboles grandes) no encontrados en 2024, tampoco en 2019
notidentified <- df %>% filter(sp=="-999") #el árbol con dbh más grande K10_528 (73 cm) esta muerto en ambos censos...
#Se corrigen manualmente valores de dbh erroneos, caso a caso, los crecimientos negativos hasta -2 cm (n=216) se corrigen y se deja valor de dbh del censo 2024, para no acumular errores, resulta en crecimiento cero.
df1 <- bind_rows(df14, df24)
df1 <- mutate(df1, status=ifelse(condition %in% c("-999", "A", "M"), "M", ifelse(condition %in% c("V", "E", "Mo"), "V", "P")))
df1 <- df1 %>% mutate(dbh = na_if(dbh, -999)) #todos los "-999" en dbh pasan a "NA"
df_2014 <- subset(df1, censusID == 2014)
df_2024 <- subset(df1, censusID == 2024)
names(df_2014)[names(df_2014) == "dbh"] <- "dbh_2014"
names(df_2024)[names(df_2024) == "dbh"] <- "dbh_2024"
names(df_2014)[names(df_2014) == "status"] <- "status_2014"
names(df_2024)[names(df_2024) == "status"] <- "status_2024"
df_merged1 <- merge(df_2014[, c("stemID", "sp", "dbh_2014", "status_2014")], df_2024[, c("stemID","sp", "dbh_2024", "status_2024")], by = c("stemID", "sp"))
df_growth <- df_merged1 %>%
filter(!is.na(dbh_2014) & !is.na(dbh_2024)) %>%
mutate(growth_rate = (dbh_2024 - dbh_2014) / 10) %>%
group_by(sp) %>%
summarise(mean_growth_rate = round(mean(growth_rate, na.rm = TRUE), 2))
View(df_growth)
View(df_merged1)
View(df_growth)
df_growth <- df_merged1 %>%
filter(!is.na(dbh_2014) & !is.na(dbh_2024)) %>%
mutate(growth_rate = (dbh_2024 - dbh_2014) / 10)
View(df_growth)
df_growth1 %>% df_growth
df_growth1 <- df_growth  %>%
group_by(sp) %>%
summarise(mean_growth_rate = round(mean(growth_rate, na.rm = TRUE), 2))
10-8.7
View(df_growth)
View(df_growth)
